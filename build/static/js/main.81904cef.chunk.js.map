{"version":3,"sources":["api/v1.js","entries/actions/fetchJobProfiles.js","entries/constants.js","entries/entries.jsx","entries/reducers/collection.js","entries/reducers/newPage.js","globalReducer.js","entries/index.js","entries/reducers/index.js","store.js","App.jsx","serviceWorker.js","index.js"],"names":["api","axios","create","baseURL","timeout","on200","status","code","data","onOther","err","response","d","error","message","v1","get","path","config","then","catch","post","put","del","delete","fetchJobProfiles","dispatch","type","payload","console","log","Entries","state","fetch","sortedInfo","columnKey","order","handleChange","pagination","filters","sorter","setState","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","value","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","onClick","icon","size","marginRight","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","text","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","count","props","newPage","profileList","reduce","acc","title","a","b","location","localeCompare","sortOrder","this","skills","companyname","experience","created","enddate","source","index","hashes","val","Object","keys","map","name","sorted","params","collection","length","expiring","span","columns","getColumns","rowKey","_id","dataSource","loading","React","PureComponent","actions","connect","entries","initialState","reducers","combineReducers","action","store","createStore","globalReducer","composeWithDevTools","applyMiddleware","thunk","App","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.81904cef.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create ({\n  baseURL: `https://nut-case.s3.amazonaws.com/jobs.json`,\n  timeout: 40000,\n});\n\nconst on200 = ({status, data}) => ({status, code: 'OK', data});\n\nconst onOther = err => {\n  const {status, data} = err.response || {status: 0, data: null};\n  const d = data || {};\n  if (status < 100) {\n    const code = err.code || 'E_DISCONNECTED';\n    const error = err.message || 'Failed to connect, check your connection';\n    return {status, code, data: {error, code}};\n  }\n  const code = d.code || `E_${status}`;\n  const error = d.error || `Something went wrong (${status})`;\n  return {status, code, data: {error, code}};\n};\n\nconst get = (path, config) => {\n  return api.get(path, config).then(on200).catch(onOther);\n};\nconst del = (path, config) => {\n  return api.delete(path, config).then(on200).catch(onOther);\n};\nconst post = (path, data, config) => {\n  return api.post(path, data, config).then(on200).catch(onOther);\n};\nconst put = (path, data, config) => {\n  return api.put(path, data, config).then(on200).catch(onOther);\n};\n\nconst v1 = {\n  get,\n  post,\n  put,\n  del\n};\n\nexport default v1;\n","import v1 from '../../api/v1';\n\nimport { FETCH_JOB_PROFILE_FAIL, FETCH_JOB_PROFILE_REQUEST, FETCH_JOB_PROFILE_SUCCESS, UNAUTH } from '../constants';\n\nconst fetchJobProfiles = () => (dispatch) => {\n  dispatch({ type: FETCH_JOB_PROFILE_REQUEST, payload: {} });\n  console.log(\"inasdd\")\n  v1.get(null, null).then(({ code, data }) => {\n    console.log(code, data)\n    switch (code) {\n      case 'OK':\n        return dispatch({ type: FETCH_JOB_PROFILE_SUCCESS, payload: data });\n      case 'E_UNAUTH':\n        return dispatch({ type: UNAUTH, payload: data });\n      default:\n        return dispatch({ type: FETCH_JOB_PROFILE_FAIL, payload: data });\n    }\n  });\n};\n\nexport default fetchJobProfiles;","export const NEW_PAGE_INIT = 'NEW_PAGE_INIT';\nexport const FETCH_JOB_PROFILE_REQUEST = 'FETCH_JOB_PROFILE_REQUEST';\nexport const FETCH_JOB_PROFILE_SUCCESS = 'FETCH_JOB_PROFILE_SUCCESS';\nexport const FETCH_JOB_PROFILE_FAIL = 'FETCH_JOB_PROFILE_FAIL';\nexport const UNAUTH = 'UNAUTH'","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Spin, Col, Row } from 'antd';\n// import * as moment from 'moment';\nimport { Input, Button, Icon } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport fetchJobProfiles from './actions/fetchJobProfiles';\n// import { Collapse } from 'antd';\n\n\n\nimport { Table } from 'antd';\n// const { Panel } = Collapse;\n\n// const data = [\n//   {\n//     applylink: \"https://www.techgig.com/jobs/Senior-Knowledge-Analyst-CKA/59843\",\n//     companyname: \"Boston Consultancy Group\",\n//     created: \"\",\n//     enddate: \"\",\n//     experience: \"4-6 yrs\",\n//     jd: \"\",\n//     location: \"Bengaluru/Bangalore\",\n//     salary: \"\",\n//     skills: \"cassandra\",\n//     source: \"techgig\",\n//     startdate: \"\",\n//     timestamp: 1528959791.958316,\n//     title: \"Senior Knowledge Analyst CKA\",\n//     type: \"\",\n//     __v: 0,\n//     _id: \"5b2b8a98263a5020388e87dc\"\n//   }\n// ];\n\nclass Entries extends React.PureComponent {\n  state = {\n    fetch: false,\n    sortedInfo: { columnKey: \"location\", order: \"descend\" },\n  }\n  getColumns() {\n    let columns = [\n      {\n        title: 'Loacation',\n        dataIndex: 'location',\n        sorter: (a, b) => ('' + a.location).localeCompare(b.location),\n        sortOrder: this.state.sortedInfo.columnKey === 'location' && this.state.sortedInfo.order,\n        width: '15%',\n        ...this.getColumnSearchProps(\"location\")\n      },\n      {\n        title: 'Skills',\n        dataIndex: 'skills',\n        sorter: (a, b) => ('' + a.skills).localeCompare(b.skills),\n        width: '15%',\n        sortOrder: this.state.sortedInfo.columnKey === 'skills' && this.state.sortedInfo.order,\n        ...this.getColumnSearchProps(\"skills\")\n      },\n      {\n        title: 'Title',\n        dataIndex: 'title',\n        sorter: (a, b) => ('' + a.title).localeCompare(b.title),\n        width: '15%',\n        sortOrder: this.state.sortedInfo.columnKey === 'title' && this.state.sortedInfo.order,\n        ...this.getColumnSearchProps(\"title\")\n      },\n      {\n        title: 'Company Name',\n        dataIndex: 'companyname',\n        sorter: (a, b) => ('' + a.companyname).localeCompare(b.companyname),\n        width: '15%',\n        sortOrder: this.state.sortedInfo.columnKey === 'companyname' && this.state.sortedInfo.order,\n        ...this.getColumnSearchProps(\"companyname\")\n      },\n      {\n        title: 'Experience',\n        dataIndex: 'experience',\n        sorter: (a, b) => ('' + a.experience).localeCompare(b.experience),\n        width: '10%',\n        sortOrder: this.state.sortedInfo.columnKey === 'experience' && this.state.sortedInfo.order,\n        ...this.getColumnSearchProps(\"experience\")\n      },\n      {\n        title: 'Created At',\n        dataIndex: 'created',\n        sorter: (a, b) => ('' + a.created).localeCompare(b.created),\n        width: '10%',\n        sortOrder: this.state.sortedInfo.columnKey === 'created' && this.state.sortedInfo.order,\n        ...this.getColumnSearchProps(\"created\")\n      },\n      {\n        title: 'Expires At',\n        dataIndex: 'enddate',\n        sorter: (a, b) => ('' + a.enddate).localeCompare(b.enddate),\n        width: '10%',\n        sortOrder: this.state.sortedInfo.columnKey === 'enddate' && this.state.sortedInfo.order,\n        ...this.getColumnSearchProps(\"enddate\")\n      },\n      {\n        title: 'Source',\n        dataIndex: 'source',\n        sorter: (a, b) => ('' + a.source).localeCompare(b.source),\n        width: '10%',\n        sortOrder: this.state.sortedInfo.columnKey === 'source' && this.state.sortedInfo.order,\n        ...this.getColumnSearchProps(\"source\")\n      }\n    ];\n    return columns\n  }\n\n  getLocationFilters(index) {\n    let hashes = this.props.newPage.profileList.reduce((hashes, val) => {\n      hashes[val[index]] = val[index]\n      return hashes\n    })\n    console.log(hashes)\n    return Object.keys(hashes).map((val) => {\n      return { type: val, name: val || \"undefined\" }\n    })\n\n\n  }\n\n  componentDidMount() {\n    this.props.fetchJobProfiles();\n  }\n\n  sortOnJobLocation() {\n    this.setState({ ...this.state, data: this.props.newPage.sorted(this.state.params) })\n  }\n\n  handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    this.setState({\n      ...this.state,\n      sortedInfo: sorter,\n    });\n\n  };\n\n  getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={node => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          icon=\"search\"\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Search\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          Reset\n        </Button>\n      </div>\n    ),\n    filterIcon: filtered => (\n      <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\n    ),\n    onFilter: (value, record) => { return record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()) },\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: text => (\n      <Highlighter\n        highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n        searchWords={[this.state.searchText]}\n        autoEscape\n        textToHighlight={text.toString()}\n      />\n    ),\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    let value = selectedKeys[0]\n    console.log(\"dataindex\", dataIndex, value)\n    let count = this.props.newPage.profileList.reduce((acc, record) => {\n      if (record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()))\n        acc++\n      return acc\n    }, 0)\n    console.log(\"count\", count)\n    this.setState({ ...this.state, searchText: selectedKeys[0], count: count });\n  };\n\n  handleReset = clearFilters => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  render() {\n\n    console.log(this.props.collection)\n    if (this.props.newPage.status === \"loading\" || this.props.newPage.status === \"ready\")\n      return (<div><br /><Spin size=\"large\" />Loading</div>)\n    if (this.props.newPage.status === \"error\")\n      return (<h1> Error </h1>)\n    if (this.props.newPage.status === \"success\" && this.state.fetch === false) {\n      this.setState({ ...this.state, fetch: true, count: this.props.newPage.profileList.length, expiring: false })\n    }\n    return (\n      <div>\n        {/* <Row>\n          <Collapse accordion>\n            <Panel header=\"CLick here to see expiring job list\" key=\"1\">\n              <Row>\n                <Col span={2}></Col>\n                <Col span={20}>\n                  <Table\n                    columns={this.getColumns()}\n                    rowKey={record => record._id}\n                    dataSource={this.props.newPage.profileList}\n                    // pagination={this.state.pagination}\n                    loading={this.state.loading}\n                    onChange={this.handleChange}\n                  />\n                </Col>\n                <Col span={2}></Col>\n              </Row>\n            </Panel>\n          </Collapse>\n        </Row> */}\n        <Row>\n          <h1>Total Records found: {this.state.count}</h1>\n        </Row>\n        <Row>\n          <Col span={2} />\n          <Col span={20}>\n            <Table\n              columns={this.getColumns()}\n              rowKey={record => record._id}\n              dataSource={this.props.newPage.profileList}\n              // pagination={this.state.pagination}\n              loading={this.state.loading}\n              onChange={this.handleChange}\n            />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n\n}\n\nconst mapStateToProps = ({ entries: { collection, newPage } }) => ({ collection, newPage });\nconst actions = { fetchJobProfiles };\n\nexport default connect(\n  mapStateToProps,\n  actions,\n)(Entries);","import { FETCH_JOB_PROFILE_SUCCESS } from '../constants';\nexport const initialState = {\n  data: []\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case FETCH_JOB_PROFILE_SUCCESS: {\n      return {data:action.payload.data}\n    }\n    default:\n      return state;\n  }\n}","import {\n    FETCH_JOB_PROFILE_REQUEST,\n    FETCH_JOB_PROFILE_SUCCESS,\n    FETCH_JOB_PROFILE_FAIL,\n    NEW_PAGE_INIT,\n  } from '../constants';\n  export const initialState = {\n    status: 'ready',\n    profileList: null,\n    message: '',\n  };\n\n\n  \n  export default function(state = initialState, action) {\n    switch (action.type) {\n      case NEW_PAGE_INIT: {\n        return {\n          ...state,\n          status: 'ready',\n        };\n      }\n      case FETCH_JOB_PROFILE_REQUEST: {\n        return {\n          ...state,\n          status: 'loading',\n        };\n      }\n      case FETCH_JOB_PROFILE_SUCCESS: {\n        return {\n          ...state,\n          status: 'success',\n          profileList: action.payload.data,\n          message: 'profiles fetch success',\n        };\n      }\n      case FETCH_JOB_PROFILE_FAIL: {\n        const { error } = action.payload;\n        return {\n          ...state,\n          status: 'error',\n          message: error,\n        };\n      }\n      default:\n        return state;\n    }\n  }\n  ","import {combineReducers} from 'redux';\nimport entries from './entries';\nlet reducers = {\n  ...entries.reducers,\n};\nexport default combineReducers (reducers);\n","import reducers from './reducers';\nconst entries = {\n    reducers: reducers,\n  };\nexport default entries","import { combineReducers } from 'redux';\nimport collection from './collection';\nimport newPage from './newPage'\n\nexport default {\n  entries: combineReducers({\n    collection,\n    newPage\n  }),\n};","import {createStore, applyMiddleware} from 'redux';\nimport globalReducer from './globalReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(globalReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;","import React from 'react';\nimport './index.css';\nimport Entries from './entries/entries';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst App = () => (\n  \n  <Provider store={store}>\n      <Entries />\n  </Provider>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\n// import { Layout } from 'antd';\n\n// const { Header, Footer, Sider, Content } = Layout;\nReactDOM.render((<App/>), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}